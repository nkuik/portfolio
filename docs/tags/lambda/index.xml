<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lambda on Home</title>
    <link>http://localhost:1313/tags/lambda/</link>
    <description>Recent content in Lambda on Home</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 18 Apr 2021 12:00:00 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/lambda/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Terraformed AWS API Gateway Lambda Function with Custom Domain</title>
      <link>http://localhost:1313/posts/terraform-aws-api-gateway-lambda/</link>
      <pubDate>Sun, 18 Apr 2021 12:00:00 +0100</pubDate>
      <guid>http://localhost:1313/posts/terraform-aws-api-gateway-lambda/</guid>
      <description>&lt;h2 id=&#34;api-gateway-v1-rest-vs-v2-websocket-and-http&#34;&gt;&#xA;  API Gateway V1 (REST) vs. V2 (Websocket and HTTP)&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#api-gateway-v1-rest-vs-v2-websocket-and-http&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;I was setting up a Lambda Function that sat behind a specific route of an API Gateway the other day at work, instead of setting up a microservice on a Kubernetes cluster and dealing with the ingress/deployment setup. While I was able to find specific pieces of this setup out there on the interwebs, I didn&amp;rsquo;t find an end-to-end solution that just worked &amp;ldquo;out of the box.&amp;rdquo; This post shows how to create the following using Terraform:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
